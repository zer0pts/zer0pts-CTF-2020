bits 16
	jmp 0x07c0:init

init:
	cli
	; Initialize segment registers
	mov ax, 0x07C0
	mov ds, ax
	mov es, ax
	mov ss, ax
	mov sp, 0xfff0
	sti
	call start
exit:
	hlt
	jmp exit

start:
	mov si, msg_welcome
	call puts
  .@Loop:
	mov si, msg_flag
	call puts
	mov di, password
	call gets
	call check
	test al, al
	jnz .@Error
	mov si, msg_ok
	call puts
	ret
	.@Error:
	mov si, msg_ng
	call puts
  jmp .@Loop

;; zer0pts{REST_IN_SPAGHETTI_NEVER_FORGETTI}
check:
	xor dx, dx
	xor cx, cx
	mov si, password
	mov di, spaghetti
	mov cl, 0x29
	.@Loop:
	lodsb
	add al, dl
	ror al, 1
	mov dl, al
	scasb
	jnz .@Error
	loop .@Loop
	lodsb
	scasb
	jnz .@Error
	xor ax, ax
	ret
	.@Error:
	xor ax, ax
	inc al
	ret

;; putc: Print a character
;; al: c
putc:
	mov ah, 0x0E
	mov bx, 7
	int 0x10
	ret
;; getc: Read a character
;; returns: al
getc:
	mov ah, 0x00
	int 0x16
	ret

;; puts: Print string without newline
;; si: *msg
puts:
	lodsb
	cmp al, 0
	je .@Qbye
	call putc
	jmp puts
	.@Qbye:
	ret
;; gets: Read string until newline
;; di: *buf
gets:
	call getc
	cmp al, 13
	je .@Qbye
	call putc
	stosb
	jmp gets
	.@Qbye:
	mov al, 0
	stosb
	mov al, 0x0D
	call putc
	mov al, 0x0A
	call putc
	ret

msg_welcome:
	db "NYEH HEH HEH!", 0x0D, 0x0A 
	db "SEEMS YOUR COMPUTER IS COMPROMISED!", 0x0D, 0x0A
	db "BUT NO NEED TO FRETTI...", 0x0D, 0x0A
	db "PAY 0.1 BTC TO THE FOLLOWING ADDRESS AND HAVE SOME SPAGHETTI!", 0x0D, 0x0A
  db " 1YTWSueiWXrACtqs5oeMEGSifp8V2ijDw", 0x0D, 0x0A, 0x0A, 0
msg_flag:
  db "FLAG: ", 0
msg_ok:
	db "THAT'S RIGHT, HUMAN!", 0x0D, 0x0A, 0
msg_ng:
	db "DON'T BE UPSETTI!", 0x0D, 0x0A, 0
spaghetti:
	db 0x3d, 0x51, 0xe1, 0x88, 0x7c, 0x78, 0xf5, 0x38, 0x45, 0x45, 0x4c, 0x50, 0xd7, 0x10, 0x2f, 0x47, 0x4d, 0xce, 0x87, 0x67, 0xd7, 0xe, 0x31, 0xc2, 0x85, 0x72, 0x60, 0xd2, 0x14, 0xac, 0x7f, 0x6f, 0xda, 0x94, 0x73, 0x5d, 0x51, 0xd2, 0x13, 0x2e, 0xd5, 0x0
password:
	times 0x30 db 0

	times 510 - ($ - $$) db 0
	dw 0xaa55
	
